function tag(n,t,e){const o=[n];if(t)if(Array.isArray(t)&&(t=t.join(" ")),"string"==typeof t)o.push(t);else for(const n in t)void 0===t[n]||(null===t[n]?o.push(n):o.push(`${n}=${quote(t[n],'"')}`));const r=`<${o.join(" ")}>`;return null==e?r:(Array.isArray(e)&&(e=e.filter((n=>null!==n)).join("")),`${r}${e}</${n}>`)}function table(n,t,e,o,r){return tag("table",n,[tag("caption",{},t),e?tag("thead",{},e):null,tag("tbody",{},o),r?tag("tfoot",{},r):null])}function style(n){return function n(t){const e=[];for(const o in t){let r=t[o];r&&(Array.isArray(r)&&(r="font-family"===o?r.join(", "):r.join(" ")),"object"==typeof r?(e.push(`${o} {`),e.push(...n(r)),e.push("}")):e.push(`${o}: ${r};`))}return e}(n).join(" ")}function quote(n,t="`"){Array.isArray(n)&&(n=n.join("")),"string"!=typeof n&&(n=String(n));const e=[];return n=n.replace(new RegExp("{{ (.+?) }}","g"),((n,t)=>(e.push(t),"{{ }}"))).replace(new RegExp(`\\\\${t}`,"g"),`\\\\${t}`).replace(new RegExp(`${t}`,"g"),`\\${t}`).replace(new RegExp("{{ }}","g"),(()=>"`"===t?`\${${e.shift()}}`:`${t} + (${e.shift()}) + ${t}`)),`${t}${n}${t}`}function func(n,t){return Array.isArray(n)&&(n=n.filter((n=>null!==n)).join(", ")),`(${n||""}) => ${t}`}function exp(n){return`{{ ${n} }}`}function expIf(n,t,e){return exp(`${n} ? ${t} : ${e}`)}function expLoop(n,t,e=""){return exp(`(() => { const expLoopValue = []; for(${n}) { expLoopValue.push(${t}); } return expLoopValue.join(${quote(e)}); })()`)}export{tag,table,style,quote,func,exp,expIf,expLoop};
//# sourceMappingURL=string-factory.min.js.map
