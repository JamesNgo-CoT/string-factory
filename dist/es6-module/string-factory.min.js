const StringFactory=(()=>{function n(n,t,e){const o=[n];if(t)if(Array.isArray(t)&&(t=t.join(" ")),"string"==typeof t)o.push(t);else for(const n in t)void 0===t[n]||(null===t[n]?o.push(n):o.push(`${n}=${r(t[n],'"')}`));const u=`<${o.join(" ")}>`;return null==e?u:(Array.isArray(e)&&(e=e.filter((n=>null!==n)).join("")),`${u}${e}</${n}>`)}function r(n,r="`"){Array.isArray(n)&&(n=n.join("")),"string"!=typeof n&&(n=String(n));const t=[];return n=n.replace(new RegExp("{{ (.+?) }}","g"),((n,r)=>(t.push(r),"{{ }}"))).replace(new RegExp(`\\\\${r}`,"g"),`\\\\${r}`).replace(new RegExp(`${r}`,"g"),`\\${r}`).replace(new RegExp("{{ }}","g"),(()=>"`"===r?`\${${t.shift()}}`:`${r} + (${t.shift()}) + ${r}`)),`${r}${n}${r}`}function t(n){return`{{ ${n} }}`}return{tag:n,table:function(r,t,e,o,u){return n("table",r,[n("caption",{},t),e?n("thead",{},e):null,n("tbody",{},o),u?n("tfoot",{},u):null])},style:function(n){return function n(r){const t=[];for(const e in r){let o=r[e];o&&(Array.isArray(o)&&(o="font-family"===e?o.join(", "):o.join(" ")),"object"==typeof o?(t.push(`${e} {`),t.push(...n(o)),t.push("}")):t.push(`${e}: ${o};`))}return t}(n).join(" ")},quote:r,func:function(n,r){return Array.isArray(n)&&(n=n.filter((n=>null!==n)).join(", ")),`(${n||""}) => ${r}`},exp:t,expIf:function(n,r,e){return t(`${n} ? ${r} : ${e}`)},expLoop:function(n,e,o=""){return t(`(() => { const expLoopValue = []; for(${n}) { expLoopValue.push(${e}); } return expLoopValue.join(${r(o)}); })()`)}}})();export default StringFactory;
//# sourceMappingURL=string-factory.min.js.map
