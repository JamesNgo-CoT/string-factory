{"version":3,"sources":["string-factory.min.js"],"names":["quote","value","arguments","length","undefined","Array","isArray","join","String","exps","replace","RegExp","match","p1","push","concat","shift","tag","children","attrs","openTagContents","key","openTag","child","caption","thead","tbody","tfoot","properties","processProperties","property","_typeof","apply","_toConsumableArray","body","args","filter","exp","expIf","condition","trueValue","falseValue","expLoop","loopExp","joiner"],"mappings":"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","file":"string-factory.min.js","sourcesContent":["function quote(value, quote = '`') {\n\tif (Array.isArray(value)) {\n\t\tvalue = value.join('');\n\t}\n\n\tif (typeof value !== 'string') {\n\t\tvalue = String(value);\n\t}\n\n\tconst exps = [];\n\tvalue = value\n\t\t.replace(new RegExp('{{ (.+?) }}', 'g'), (match, p1) => {\n\t\t\texps.push(p1);\n\t\t\treturn '{{ }}';\n\t\t})\n\t\t.replace(new RegExp(`\\\\\\\\${quote}`, 'g'), `\\\\\\\\${quote}`)\n\t\t.replace(new RegExp(`${quote}`, 'g'), `\\\\${quote}`)\n\t\t.replace(new RegExp('{{ }}', 'g'), () => {\n\t\t\tif (quote === '`') {\n\t\t\t\treturn `\\${${exps.shift()}}`;\n\t\t\t} else {\n\t\t\t\treturn `${quote} + (${exps.shift()}) + ${quote}`;\n\t\t\t}\n\t\t});\n\n\treturn `${quote}${value}${quote}`;\n}\n\nfunction tag(tag, attrs, children) {\n\tconst openTagContents = [tag];\n\tif (attrs) {\n\t\tif (Array.isArray(attrs)) {\n\t\t\tattrs = attrs.join(' ');\n\t\t}\n\n\t\tif (typeof attrs === 'string') {\n\t\t\topenTagContents.push(attrs);\n\t\t} else {\n\t\t\tfor (const key in attrs) {\n\t\t\t\tif (attrs[key] === undefined) {\n\t\t\t\t\t// DO NOTHING\n\t\t\t\t} else if (attrs[key] === null) {\n\t\t\t\t\topenTagContents.push(key);\n\t\t\t\t} else {\n\t\t\t\t\topenTagContents.push(`${key}=${quote(attrs[key], '\"')}`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tconst openTag = `<${openTagContents.join(' ')}>`;\n\n\tif (children === undefined || children === null) {\n\t\treturn openTag;\n\t}\n\n\tif (Array.isArray(children)) {\n\t\tchildren = children.filter((child) => child !== null).join('');\n\t}\n\n\treturn `${openTag}${children}</${tag}>`;\n}\n\nfunction table(attrs, caption, thead, tbody, tfoot) {\n\treturn tag('table', attrs, [\n\t\ttag('caption', {}, caption),\n\t\tthead ? tag('thead', {}, thead) : null,\n\t\ttag('tbody', {}, tbody),\n\t\ttfoot ? tag('tfoot', {}, tfoot) : null\n\t]);\n}\n\nfunction style(properties) {\n\tfunction processProperties(properties) {\n\t\tconst value = [];\n\n\t\tfor (const key in properties) {\n\t\t\tlet property = properties[key];\n\n\t\t\tif (!property) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (Array.isArray(property)) {\n\t\t\t\tif (key === 'font-family') {\n\t\t\t\t\tproperty = property.join(', ');\n\t\t\t\t} else {\n\t\t\t\t\tproperty = property.join(' ');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (typeof property === 'object') {\n\t\t\t\tvalue.push(`${key} {`);\n\t\t\t\tvalue.push(...processProperties(property));\n\t\t\t\tvalue.push('}');\n\t\t\t} else {\n\t\t\t\tvalue.push(`${key}: ${property};`);\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t}\n\n\treturn processProperties(properties).join(' ');\n}\n\nfunction func(args, body) {\n\tif (Array.isArray(args)) {\n\t\targs = args.filter((child) => child !== null).join(', ');\n\t}\n\n\treturn `(${args || ''}) => ${body}`;\n}\n\nfunction exp(value) {\n\treturn `{{ ${value} }}`;\n}\n\nfunction expIf(condition, trueValue, falseValue) {\n\treturn exp(`${condition} ? ${trueValue} : ${falseValue}`);\n}\n\nfunction expLoop(loopExp, body, joiner = '') {\n\treturn exp(`(() => { const expLoopValue = []; for(${loopExp}) { expLoopValue.push(${body}); } return expLoopValue.join(${quote(joiner)}); })()`);\n}\n\n/* exported exp, expIf, expLoop, func, quote, style, table, tag */\n"]}